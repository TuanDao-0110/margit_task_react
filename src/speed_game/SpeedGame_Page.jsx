import React, { Component } from "react";
import style from "./css/speedgame.module.css";
import { MULTIPLY, PLUS, DIVIDE, MINUS } from "./formula/formula";
export default class SpeedGame_Page extends Component {
  state = {
    time: 10, // default time
    score: 0, // final score is added when user give correct answer
    numberLength: 1, // length of interger number chosen by user
    firstNum: 1, // 1 number generated by application
    secondNum: 1, // 2nd number generated by application
    correctResult: 1, // correctResult to compare when calculate 2 nunber react
    formula: PLUS, // plus + minus + multiply + divide
    round: 3, // round left when user can not answer before time run out/
    speed: 1, // speed is chosen by user
    scoreRatio: 1, // reflect user score as fast/difficulty ==> got more point
    userAnswer: 0, // user answer
    modal: false,
  };
  // 1. set time
  // 2. press start to run
  // 3. auto give 1 vs 2 number ==> calculate correct rersult first
  // 4. time run off from time default
  // 5. user have to give the answer for the QUESTION before the time run off
  // 6. user have 3 round
  // 6.1 if you have correct answer ==> it will auto move to the next question ==> add score for user ==> score += scoreRation ==> it will get bigger depend on how far or how fast you can go
  // 6.2 if you have wrong anseer ==> it will remove 1 round out ==> if round ===0 ==> user lose ==> show the modal

  // 1. calculte scoreRatio
  calculteScoreRatio = () => {
    let { speed, numberLength, formula } = this.state;
    switch (formula) {
      case MULTIPLY:
        this.state({ ...this.state, scoreRatio: speed * numberLength * 3 });
        return;
      case DIVIDE:
        this.state({ ...this.state, scoreRatio: speed * numberLength * 3 });
        return;
      case MINUS:
        this.state({ ...this.state, scoreRatio: speed * numberLength * 2 });
        return;
      default:
        this.state({ ...this.state, scoreRatio: speed * numberLength });
        return;
    }
  };
  // 2. calculate 2 number
  calculateNumber = () => {
    const { firstNum, secondNum, formula } = this.state;
    switch (formula) {
      case MULTIPLY:
        this.state({ ...this.state, correctResult: firstNum * secondNum });
        return;
      case DIVIDE:
        let result = (firstNum / secondNum).toFixed(1);
        this.state({ ...this.state, correctResult: result });
        return;
      case MINUS:
        this.state({ ...this.state, correctResult: firstNum - secondNum });
        return;
      default:
        this.state({ ...this.state, correctResult: firstNum + secondNum });
        break;
    }
  };
  // 3. compare user's answer vs  correctAnswer ==>
  compareResult = () => {
    let { userAnswer, correctResult, time, round, score } = this.state;
    // compare user' answer vs correct answer
    //  function on active when the time =0
    //    3.1 check that user is correct  ?
    if (userAnswer === correctResult) {
      this.setState({
        ...this.state,
        score: score++,
      });
    }
    // 3.2 if wrong ==> remove 1 round
    else if (userAnswer !== correctResult && round !== 0) {
      if (round !== 0) {
        this.state({
          ...this.state,
          round: round--,
        });
      } else {
        this.state({
          ...this.state,
          modal: true,
        });
      }
    }
  };
  //4. time count down   ==> also compare auto when it turn 0 ==> move to the next if player answers correct
  countDown = () => {
    let setSpeed = (1000 / this.state.speed).toFixed(0);
    setTimeout(() => {
      if (this.state.time > 0) {
        let { time } = this.state;
        this.setState({ ...this.state, time: time - 1 });
      } else {
        this.compareResult();
      }
    }, setSpeed);
  };

  //5. set speed :
  setSpeed = (e) => {
    this.setState({
      ...this.state,
      speed: e.target.value,
    });
  };
  // 7. generate number 2nd
  setUpNumber = () => {
    
    let numberLength 
   
    this.setState({
      ...this.state,
      firstNum: Math.floor(Math.random() * numberLength) ,
      secondNum: Math.floor(Math.random() * numberLength),
    });
  };
  // 6 submit you anwser
  handleSubmit = (e) => {
    e.preventDefault();
  };
  // 8. set up length
  setUpNumberLength = (e)=> { 
    this.setState({
      ...this.state,numberLength : e.target.value
    })
  }
  render() {
    return (
      <div className={style["main"]}>
        <div className="w-3/4 m-auto">
          <h1 className="text-center text-3xl text-blue-300"> speed game </h1>
          {/* game setting  */}
          <div>
            <div>
              Time
              <p>{this.state.time}</p>
              speed <p>{this.state.speed}</p>
            </div>

            <div>
              <label htmlFor="">set speed</label>
              <input type="number" onChange={this.setSpeed} />
            </div>
            <div>
              <label htmlFor="">set up number length</label>
              <input type="number" onChange={this.setUpNumberLength} />
            </div>
          </div>
          {/* game display includes  formula vs user input  */}
          <div>
            <p>
              {this.state.firstNum} + {this.state.secondNum} = {this.state.time !== 0 ? "?" : this.state.correctResult}
            </p>
            <button onClick={this.setUpNumber}>set up number</button>
            <p>your answer</p>
            <form>
              <input
                type="number"
                name=""
                id=""
                onChange={(e) => {
                  this.setState({
                    ...this.state,
                    userAnswer: e.target.value,
                  });
                }}
              />
              <button className="bg-blue-300 p-4 rounded-md">answer</button>
            </form>
            {Math.round(Math.random() * 101)}
          </div>
        </div>
      </div>
    );
  }
}
